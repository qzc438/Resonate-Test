{"version":3,"sources":["ContactPagination.js","GoogleMap.js","App.js","reportWebVitals.js","index.js"],"names":["ContactPagination","props","handleItemClick","e","name","setState","activeItem","pageNumberOnChange","page","startNum","state","pageSize","tempDisplay","listAll","slice","listPage","currentPage","lat","lng","console","log","this","history","push","pathname","loadData","axios","get","then","response","data","catch","error","style","paddingLeft","paddingRight","Menu","Item","active","onClick","Icon","Table","celled","striped","overflow","Header","Row","HeaderCell","colSpan","rowSpan","textAlign","Body","map","value","key","Cell","id","username","email","address","street","suite","city","zipcode","handleClick","bind","geo","phone","website","company","catchPhrase","bs","className","onChange","total","length","current","Component","GMap","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","onMapClicked","google","initialCenter","location","zoom","position","visible","React","GoogleApiWrapper","apiKey","App","exact","path","component","GoogleMap","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cc7a2fc.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react'\r\nimport {Icon, Menu, Table} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {Pagination} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport axios from \"axios\";\r\n\r\nclass ContactPagination extends Component {\r\n\r\n    // constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentPage: 1,\r\n            pageSize: 5,\r\n            listAll: [],\r\n            listPage: []\r\n        }\r\n    }\r\n\r\n    // handle menu item\r\n    handleItemClick = (e, {name}) => this.setState({activeItem: name});\r\n\r\n    // handle map icon click\r\n    handleClick(lat, lng) {\r\n        console.log(lat, lng);\r\n        // var data = {lat:lat,lng:lng};\r\n        // data = JSON.stringify(data);\r\n        // var path = '/GoogleMap/${data}';\r\n        // this.props.history.push(path);\r\n        this.props.history.push({pathname: '/GoogleMap', state: {lat: -37.907803, lng: 145.133957}})\r\n    }\r\n\r\n    // load data in mount\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        var api = 'https://jsonplaceholder.typicode.com/users';\r\n        axios.get(api)\r\n            .then((response) => {\r\n                //console.log(response);\r\n                //console.log(response.data);\r\n                //用到this需要注意指向，箭头函数\r\n                this.setState({\r\n                    listAll: response.data,\r\n                    listPage: response.data.slice(0, this.state.pageSize)\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    // handle pagination\r\n    pageNumberOnChange = (page) => {\r\n        let startNum = page > 0 ? (page - 1) * this.state.pageSize : 0;\r\n        let tempDisplay = this.state.listAll.slice(startNum, startNum + this.state.pageSize);\r\n        this.setState(\r\n            {\r\n                listPage: tempDisplay,\r\n                currentPage: page\r\n            }\r\n        );\r\n    }\r\n\r\n    // render page\r\n    render() {\r\n        const {activeItem} = this.state;\r\n        return (\r\n            <Fragment>\r\n\r\n                <div style={{paddingLeft: \"10px\", paddingRight: \"10px\"}}>\r\n                    <Menu>\r\n                        <Menu.Item\r\n                            name='create'\r\n                            active={activeItem === 'create'}\r\n                            onClick={this.handleItemClick}\r\n                        >\r\n                            <Icon name='user plus'/>\r\n                            Create\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item\r\n                            name='update'\r\n                            active={activeItem === 'update'}\r\n                            onClick={this.handleItemClick}\r\n                        >\r\n                            <Icon name='user'/>\r\n                            Update\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item\r\n                            name='delete'\r\n                            active={activeItem === 'delete'}\r\n                            onClick={this.handleItemClick}\r\n                        >\r\n                            <Icon name='user times'/>\r\n                            Delete\r\n                        </Menu.Item>\r\n                    </Menu>\r\n\r\n                    <Table celled striped style={{overflow: 'auto'}}>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell colSpan='1' rowSpan='2' textAlign='center'>Id</Table.HeaderCell>\r\n                                <Table.HeaderCell colSpan='1' rowSpan='2' textAlign='center'>Name</Table.HeaderCell>\r\n                                <Table.HeaderCell colSpan='1' rowSpan='2' textAlign='center'>Username</Table.HeaderCell>\r\n                                <Table.HeaderCell colSpan='1' rowSpan='2' textAlign='center'>Email</Table.HeaderCell>\r\n                                <Table.HeaderCell colSpan='2' rowSpan='2' textAlign='center'>Address</Table.HeaderCell>\r\n                                <Table.HeaderCell colSpan='1' rowSpan='2' textAlign='center'>Phone</Table.HeaderCell>\r\n                                <Table.HeaderCell colSpan='1' rowSpan='2' textAlign='center'>Website</Table.HeaderCell>\r\n                                <Table.HeaderCell colSpan='3' textAlign='center'>Company</Table.HeaderCell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell colSpan='1' textAlign='center'>Name</Table.HeaderCell>\r\n                                <Table.HeaderCell colSpan='1' textAlign='center'>Catch Phrase</Table.HeaderCell>\r\n                                <Table.HeaderCell colSpan='1' textAlign='center'>Business Scope</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {\r\n                                this.state.listPage.map((value, key) => {\r\n                                    return [<Table.Row key={key}>\r\n                                        <Table.Cell>{value.id}</Table.Cell>\r\n                                        <Table.Cell>{value.name}</Table.Cell>\r\n                                        <Table.Cell>{value.username}</Table.Cell>\r\n                                        <Table.Cell>{value.email}</Table.Cell>\r\n                                        <Table.Cell>{value.address.street}, {value.address.suite}, {value.address.city}, {value.address.zipcode}</Table.Cell>\r\n                                        <Table.Cell><Icon name='map marker alternate'\r\n                                                          onClick={this.handleClick.bind(this, value.address.geo.lat, value.address.geo.lng)}/></Table.Cell>\r\n                                        <Table.Cell>{value.phone}</Table.Cell>\r\n                                        <Table.Cell>{value.website}</Table.Cell>\r\n                                        <Table.Cell>{value.company.name}</Table.Cell>\r\n                                        <Table.Cell>{value.company.catchPhrase}</Table.Cell>\r\n                                        <Table.Cell>{value.company.bs}</Table.Cell>\r\n                                    </Table.Row>\r\n                                    ]\r\n                                })\r\n                            }\r\n                        </Table.Body>\r\n                    </Table>\r\n\r\n                    <div className=\"content-foot-page\">\r\n                        <Pagination onChange={this.pageNumberOnChange} total={this.state.listAll.length}\r\n                                    pageSize={this.state.pageSize} current={this.state.currentPage}/>\r\n                    </div>\r\n\r\n                </div>\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactPagination;\r\n","import React from 'react';\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\nexport class GMap extends React.Component {\r\n    state = {\r\n        showingInfoWindow: false,\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n    };\r\n\r\n    onMarkerClick = (props, marker, e) =>\r\n        this.setState({\r\n            selectedPlace: props,\r\n            activeMarker: marker,\r\n            showingInfoWindow: true\r\n        });\r\n\r\n    onMapClicked = (props) => {\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: null\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Map google={this.props.google}\r\n                 initialCenter={{\r\n                     lat: this.props.location.state.lat,\r\n                     lng: this.props.location.state.lng\r\n                 }}\r\n                 zoom={16.75}\r\n                 onClick={this.onMapClicked}>\r\n                <Marker onClick={this.onMarkerClick}\r\n                        name={'descripton'}\r\n                        position={{lat: this.props.location.state.lat, lng: this.props.location.state.lng}}/>\r\n\r\n                <InfoWindow\r\n                    marker={this.state.activeMarker}\r\n                    visible={this.state.showingInfoWindow}>\r\n                    <div>\r\n                        <h3>{this.state.selectedPlace.name}</h3>\r\n                    </div>\r\n                </InfoWindow>\r\n            </Map>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: ('AIzaSyAeEYdRmc6U_UWEEdAHBFA05ZEdQvlv4Iw')\r\n})(GMap)\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport {BrowserRouter, HashRouter, Route} from 'react-router-dom';\nimport ContactPagination from './ContactPagination';\nimport GoogleMap from './GoogleMap';\n\nclass App extends React.Component {\n    render(){\n        return(\n            <HashRouter>\n                <div>\n                    <Route exact path=\"/\" component={ContactPagination} />\n                    <Route path=\"/GoogleMap/\" component={GoogleMap} />\n                </div>\n            </HashRouter>\n        )\n    }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ContactPagination from \"./ContactPagination\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}